{"version":3,"sources":["components/Navbar.js","components/RankList.js","components/Index.js","components/ListPage.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","class","href","React","Component","RankListCreate","props","this","setState","state","createMode","className","placeholder","onClick","RankListItem","to","list","id","name","optionCount","activeTime","toString","RankList","lists","Date","getLists","map","l","Index","CandidateInsert","insertMode","Candidate","candidate","myVote","voteHandler","voteUp","voteDown","CandidateList","candidates","idx","key","vote","ListPage","getListData","match","params","newState","JSON","parse","stringify","c","listCandidates","listName","withRouter","App","path","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.71ff12ba.chunk.js","sourcesContent":["import React from 'react';\n\nclass Navbar extends React.Component {\n  render() {\n    return (\n      <nav class=\"navbar navbar-expand-lg\">\n        <ul class=\"navbar-nav\">\n          <li><a href=\"/\" class=\"nav-link\">Home</a></li>\n          <li><a href=\"#\" class=\"nav-link\">NavItem2</a></li>\n          <li><a href=\"#\" class=\"nav-link\">NavItem3</a></li>\n        </ul>\n      </nav>\n    )\n  }\n}\n\nexport default Navbar;\n","import React from 'react'\nimport './RankList.css'\nimport {\n  Link\n} from \"react-router-dom\";\n\nclass RankListCreate extends React.Component {\n  constructor(props) {\n    super(props)\n  }\n\n  componentWillMount (){\n    this.setState ({\n      \"createMode\": false\n    })\n  }\n\n  render() {\n    if (this.state.createMode) {\n      return (\n        <div className=\"row\">\n          <div className=\"col-8\">\n            <input\n              className=\"form-control\"\n              placeholder=\"输入投票标题\"\n            />\n          </div>\n          <div className=\"col-4\">\n            <button\n              className=\"btn btn-primary\"\n            >\n              确定\n            </button>\n            <button\n              className=\"btn btn-primary\"\n              onClick={() => this.setState({\"createMode\": false})}\n            >\n              取消\n            </button>\n          </div>\n        </div>\n      )\n    } else {\n      return (\n        <div className=\"row\">\n          <div className=\"col\">\n            <button\n              className=\"btn btn-primary\"\n              onClick={() => this.setState({\"createMode\": true})}\n            >\n              发起投票\n            </button>\n          </div>\n        </div>\n      )\n    }\n  }\n  \n}\n\nclass RankListItem extends React.Component {\n  constructor(props) {\n    super(props)\n  }\n\n  render() {\n    return (\n      <div className=\"col\">\n        <div className=\"list-item-wrap\">\n          <div className=\"list-item-title text-center\">\n            <Link to={`/lists/${this.props.list.id}`}>{this.props.list.name}</Link>\n          </div>\n          <div>\n            <p>{this.props.list.optionCount}个选项</p>\n          </div>\n          <div className=\"list-item-footer\">\n            <span>{`${this.props.list.activeTime.toString()}`}</span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nclass RankList extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      lists: [],\n    }\n  }\n\n  getLists() {\n    this.setState({\n      lists: [\n        {\"id\": \"123\", \"name\": \"abca\", \"optionCount\": 3, \"activeTime\": Date()},\n        {\"id\": \"124\", \"name\": \"abda\", \"optionCount\": 4, \"activeTime\": Date()},\n        {\"id\": \"125\", \"name\": \"abfa\", \"optionCount\": 6, \"activeTime\": Date()},\n        {\"id\": \"126\", \"name\": \"abga\", \"optionCount\": 2, \"activeTime\": Date()}\n      ]\n    })\n  }\n\n  componentDidMount() {\n    this.getLists()\n  }\n \n  render() {\n    return (\n      <div className=\"rank-list-container mx-auto\"> \n        <div className=\"py-2\">\n          <RankListCreate />\n        </div>\n        <div className=\"row row-cols-md-3 row-cols-1\">\n          {this.state.lists.map((l) => <RankListItem list={l} />)}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default RankList;\n","import React from 'react';\nimport RankList from './RankList.js'\n\nclass Index extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"index-page\">\n        <div className=\"text-center\">\n          <h1>GauchoRank</h1>\n        </div>\n        <RankList />\n      </div>\n    )\n  }\n}\n\nexport default Index;\n","import React from \"react\";\nimport {\n  useParams,\n  withRouter\n} from \"react-router-dom\"\n\nclass CandidateInsert extends React.Component {\n  constructor(props) {\n    super(props)\n  }\n\n  componentWillMount (){\n    this.setState ({\n      \"insertMode\": false\n    })\n  }\n\n  render() {\n    if (this.state.insertMode) {\n      return (\n        <div>\n          <div class=\"row\">\n            <div class=\"col-8\">\n              <input\n                className=\"form-control\"\n                placeholder=\"输入选项\"/>\n            </div>\n            <div class=\"col-4\">\n              <button \n                className=\"btn btn-primary\"\n                >\n                确定\n              </button>\n              <button \n                className=\"btn btn-primary\"\n                onClick={() => this.setState({\"insertMode\": false})}\n                >\n                取消\n              </button>\n            </div>\n          </div>\n        </div>\n      )\n    } else {\n      return (\n        <div>\n          <div class=\"row\">\n            <div class=\"col\">\n              <button \n                className=\"btn btn-primary\"\n                onClick={() => this.setState({\"insertMode\": true})}\n                >\n                增添选项\n              </button>\n            </div>\n          </div>\n        </div>\n      )\n    }\n  }\n}\n\nclass Candidate extends React.Component {\n  constructor(props) {\n    super(props)\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"row py-1\">\n          <div className=\"col-8\">\n            {this.props.candidate.name}  \n          </div>\n          <div className=\"col-4\">\n            <button \n              className={`btn ${this.props.candidate.myVote===\"up\"?\"btn-primary\":\"btn-outline-primary\"}`}\n              onClick={() => this.props.voteHandler(\"up\")}\n              > \n              支持 {this.props.candidate.voteUp}\n            </button> \n\n            <button \n              className={`btn ${this.props.candidate.myVote===\"down\"?\"btn-primary\":\"btn-outline-primary\"}`}\n              onClick={() => this.props.voteHandler(\"down\")}\n              > \n              反对 {this.props.candidate.voteDown}\n            </button> \n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nclass CandidateList extends React.Component {\n  constructor(props) {\n    super(props)\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"py-2\">\n          <CandidateInsert/>\n        </div>\n        <div>\n          {this.props.candidates.map((candidate, idx) => \n            <Candidate\n              key={candidate.name} \n              candidate={candidate}\n              voteHandler={(vote) => this.props.voteHandler(idx, vote)}/>\n          )}\n        </div>\n      </div>\n    )\n  }\n\n}\n\nclass ListPage extends React.Component {\n  constructor(props) {\n    super(props)\n  }\n\n  componentWillMount() {\n    this.getListData()\n  }\n\n  getListData() {\n    this.setState({\n      \"listId\": this.props.match.params.id,\n      \"listName\": \"Test\",\n      \"listCandidates\": [\n        {\n          \"name\": \"candidate1\",\n          \"voteUp\": 6,\n          \"voteDown\": 3,\n          \"myVote\": \"none\"\n        },\n        {\n          \"name\": \"candidate2\",\n          \"voteUp\": 6,\n          \"voteDown\": 3,\n          \"myVote\": \"up\"\n        },\n        {\n          \"name\": \"candidate3\",\n          \"voteUp\": 6,\n          \"voteDown\": 3,\n          \"myVote\": \"none\"\n        }\n      ]\n    })\n  }\n\n  voteHandler(idx, vote) {\n    this.setState((state) => {\n      let newState = JSON.parse(JSON.stringify(state))\n      let c = newState.listCandidates[idx]\n      if (vote === \"up\") {\n        if (c.myVote === \"none\") {\n          c.voteUp += 1\n          c.myVote = \"up\"\n        } else if (c.myVote === \"down\") {\n          c.voteUp += 1\n          c.voteDown -= 1\n          c.myVote = \"up\"\n        } else if (c.myVote === \"up\") {\n          c.voteUp -= 1\n          c.myVote = \"none\"\n        }\n      } else if (vote === \"down\") {\n        if (c.myVote === \"none\") {\n          c.voteDown += 1\n          c.myVote = \"down\"\n        } else if (c.myVote === \"down\") {\n          c.voteDown -= 1\n          c.myVote = \"none\"\n        } else if (c.myVote === \"up\") {\n          c.voteUp -= 1\n          c.voteDown += 1\n          c.myVote = \"down\"\n        }\n      }\n      return newState;\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"text-center\">\n          <p>{this.state.listName}</p>\n        </div>\n        <div>\n          <CandidateList \n            candidates={this.state.listCandidates}\n            voteHandler={(idx, vote) => this.voteHandler(idx, vote)}/>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(ListPage);\n","import React from 'react';\nimport Navbar from './components/Navbar.js';\nimport Index from './components/Index.js';\nimport ListPage from './components/ListPage.js';\n\nimport {\n  BrowserRouter,\n  Switch,\n  Link,\n  Route\n} from \"react-router-dom\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"container\">\n          <Navbar />\n\n          <Switch>\n\n            <Route path=\"/lists/:id\">\n              <ListPage />\n            </Route>\n            \n            <Route path=\"/\">\n              <Index />\n            </Route>\n\n          </Switch>\n        </div>\n      </BrowserRouter>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}